{"version":3,"sources":["context/UserContext.js","components/navbar.js","components/overviewPage.js","components/addApplication.js","components/editApplication.js","components/auth/register.js","components/auth/login.js","components/loginPage.js","App.js","serviceWorker.js","index.js"],"names":["createContext","Navigation","useContext","UserContext","userData","setUserData","Navbar","bg","variant","Brand","href","Nav","className","Link","user","Button","onClick","token","undefined","localStorage","setItem","window","location","Applications","props","app","company","title","link","date","substring","notes","_id","deleteApplication","OverviewPage","state","apps","bind","getItem","axios","get","headers","then","response","setState","data","id","delete","console","log","this","filter","el","map","currApps","key","Card","text","style","width","Header","Body","Title","Text","length","Table","striped","hover","applicationList","Component","AddApplication","Date","onChangeCompany","onChangeTitle","onChangeLink","onChangeDate","onChangeNotes","onSubmit","e","target","value","preventDefault","application","post","res","Form","Group","as","Row","Label","column","sm","Col","Control","type","placeholder","onChange","selected","EditApplication","match","params","catch","error","Registration","username","password","password_confirmation","isValid","registrationErrors","handleSubmit","onChangeUsername","onChangePassword","onChangePasswordConfirm","status","handleSuccessfulAuth","controlId","required","Alert","Login","useState","setUsername","setPassword","valid","setValid","submit","a","loginUser","loginRes","LoginPage","App","useEffect","userRes","checkLoggedIn","Provider","path","exact","component","FrontPage","AddPage","EditPage","Register","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c8e972db.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport default createContext(null);","import React, { Component, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Navbar, Nav, Button } from 'react-bootstrap'\r\nimport UserContext from '../context/UserContext';\r\n\r\nexport default function Navigation () {\r\n    const { userData, setUserData } = useContext(UserContext);\r\n\r\n    const logout = () => {\r\n        setUserData({\r\n            token: undefined,\r\n            user: undefined,\r\n        });\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        window.location = 'Job-Application-Tracker/login'\r\n    }\r\n    \r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"Job-Application-Tracker/\">App Tracker</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"Job-Application-Tracker/\">Overview</Nav.Link>\r\n                <Nav.Link href=\"Job-Application-Tracker/add\">Add</Nav.Link>\r\n            </Nav>\r\n            { \r\n                userData.user ? (\r\n                    <a><Button onClick={logout} variant=\"info\">Logout</Button></a>\r\n                ) : (\r\n                    <div>\r\n                        <a href=\"Job-Application-Tracker/login\" className=\"mr-2\"><Button variant=\"info\">Login</Button></a>\r\n                        <a href=\"Job-Application-Tracker/register\"><Button variant=\"outline-info\">Register</Button></a>\r\n                    </div>\r\n                )\r\n            }\r\n            \r\n        </Navbar>\r\n    )\r\n    \r\n}","import React, { Component } from 'react';\r\nimport { BrowserRouter as Link, Router } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table, Card } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nconst Applications = props => (\r\n    <tr>\r\n        <td>{props.app.company}</td>\r\n        <td>{props.app.title}</td>\r\n        <td><a href={props.app.link}>{props.app.link}</a></td>\r\n        <td>{props.app.date.substring(0,10)}</td>\r\n        <td>{props.app.notes}</td>\r\n        <td>\r\n            <a href={\"Job-Application-Tracker/edit/\"+props.app._id}>edit</a> | <a href=\"#\" onClick={() => { props.deleteApplication(props.app._id) }}>delete</a>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class OverviewPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            apps: [],\r\n        }\r\n        this.deleteApplication = this.deleteApplication.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem(\"auth-token\");\r\n        if (token === null) {\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            token = \"\";\r\n            window.location = 'Job-Application-Tracker/login'\r\n        }\r\n        else if (token === \"\") {\r\n            window.location = 'Job-Application-Tracker/login'\r\n        }\r\n        else {\r\n            axios.get('http://localhost:5000/applications/ofUser', { headers: {\"x-auth-token\": token} })\r\n            .then(response => {\r\n                this.setState({\r\n                    apps: response.data,\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteApplication(id) {\r\n        axios.delete('http://localhost:5000/applications/'+id)\r\n          .then(response => { console.log(response.data)});\r\n    \r\n        this.setState({\r\n          apps: this.state.apps.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    applicationList() {\r\n        return this.state.apps.map(currApps => {\r\n          return <Applications app={currApps} deleteApplication={this.deleteApplication} key={currApps._id}/>;\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div>\r\n                <Card \r\n                bg={'info'} \r\n                text={'white'} \r\n                style={{ width: '18rem' }} \r\n                className=\"mb-2\" \r\n                className=\"mt-5\"\r\n                >\r\n                    <Card.Header>Summary</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title> Total Applications </Card.Title>\r\n                        <Card.Text>\r\n                            You have a total of {this.state.apps.length} applications\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n                <h3 className=\"mt-5\">Applications</h3>\r\n                <Table striped hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Company</th>\r\n                            <th>Position Title</th>\r\n                            <th>Link</th>\r\n                            <th>Date</th>\r\n                            <th>Notes</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.applicationList()}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nexport default class AddApplication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            company: '',\r\n            title: '',\r\n            link: '',\r\n            date: new Date(),\r\n            notes: '',\r\n        }\r\n        this.onChangeCompany = this.onChangeCompany.bind(this);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeLink = this.onChangeLink.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onChangeNotes = this.onChangeNotes.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem(\"auth-token\");\r\n        if (token === null) {\r\n            localStorage.setItem(\"auth-token\", \"\");\r\n            token = \"\";\r\n            window.location = '/login'\r\n        }\r\n        else if (token === \"\") {\r\n            window.location = '/login'\r\n        }\r\n    }\r\n\r\n    onChangeCompany(e) {\r\n        this.setState({ company: e.target.value })\r\n    }\r\n    onChangeTitle(e) {\r\n        this.setState({ title: e.target.value })\r\n    }\r\n    onChangeLink(e) {\r\n        this.setState({ link: e.target.value })\r\n    }\r\n    onChangeDate(date) {\r\n        this.setState({ date: date })\r\n    }\r\n    onChangeNotes(e) {\r\n        this.setState({ notes: e.target.value })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let token = localStorage.getItem(\"auth-token\");\r\n\r\n        const application = {\r\n            company: this.state.company,\r\n            title: this.state.title,\r\n            link: this.state.link,\r\n            date: this.state.date,\r\n            notes: this.state.notes,\r\n        }\r\n      \r\n        console.log(application);\r\n\r\n        axios.post('http://localhost:5000/applications/add', application, { headers: {\"x-auth-token\": token} })\r\n            .then(res => console.log(res.data));\r\n\r\n        window.location = 'Job-Application-Tracker/';\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3 className=\"mt-5\">Create Application</h3>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Company</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" placeholder=\"company\" onChange={this.onChangeCompany}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Title</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" placeholder=\"title\" onChange={this.onChangeTitle}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Link</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" placeholder=\"link\" onChange={this.onChangeLink}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Notes</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" placeholder=\"notes\" onChange={this.onChangeNotes}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Date</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <DatePicker selected={this.state.date} onChange={this.onChangeDate}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <div className=\"form-group mt-5\">\r\n                        <input type=\"submit\" value=\"Create Application Log\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditApplication extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            company: '',\r\n            title: '',\r\n            link: '',\r\n            date: new Date(),\r\n            notes: '',\r\n        }\r\n        this.onChangeCompany = this.onChangeCompany.bind(this);\r\n        this.onChangeTitle = this.onChangeTitle.bind(this);\r\n        this.onChangeLink = this.onChangeLink.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onChangeNotes = this.onChangeNotes.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/applications/'+ this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    company: response.data.company,\r\n                    title: response.data.title,\r\n                    link: response.data.link,\r\n                    date: new Date(response.data.date),\r\n                    notes: response.data.notes,\r\n                })\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChangeCompany(e) {\r\n        this.setState({ company: e.target.value })\r\n    }\r\n    onChangeTitle(e) {\r\n        this.setState({ title: e.target.value })\r\n    }\r\n    onChangeLink(e) {\r\n        this.setState({ link: e.target.value })\r\n    }\r\n    onChangeDate(date) {\r\n        this.setState({ date: date })\r\n    }\r\n    onChangeNotes(e) {\r\n        this.setState({ notes: e.target.value })\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const application = {\r\n            company: this.state.company,\r\n            title: this.state.title,\r\n            link: this.state.link,\r\n            date: this.state.date,\r\n            notes: this.state.notes,\r\n        }\r\n      \r\n        console.log(application);\r\n\r\n        axios.post('http://localhost:5000/applications/update/' + this.props.match.params.id, application)\r\n            .then(res => console.log(res.data));\r\n\r\n        window.location = 'Job-Application-Tracker/';\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3 className=\"mt-5\">Create Application</h3>\r\n                <Form onSubmit={this.onSubmit}>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Company</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" placeholder={this.state.company} onChange={this.onChangeCompany}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Title</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" placeholder={this.state.title} onChange={this.onChangeTitle}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Link</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" placeholder={this.state.link} onChange={this.onChangeLink}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Notes</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" placeholder={this.state.notes} onChange={this.onChangeNotes}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                        <Form.Label column sm=\"2\">Date</Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <DatePicker selected={this.state.date} onChange={this.onChangeDate}/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <div className=\"form-group mt-5\">\r\n                        <input type=\"submit\" value=\"Update Application Log\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Alert, Form, Col, Row } from 'react-bootstrap';\r\n\r\nexport default class Registration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      password_confirmation: \"\",\r\n      isValid: true,\r\n      registrationErrors: \"\"\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangePasswordConfirm = this.onChangePasswordConfirm.bind(this);\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({ username: e.target.value })\r\n  }\r\n  onChangePassword(e) {\r\n      this.setState({ password: e.target.value })\r\n  }\r\n  onChangePasswordConfirm(e) {\r\n    this.setState({ password_confirmation: e.target.value })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    \r\n    if (this.state.password === this.state.password_confirmation) {\r\n      this.setState({\r\n          isValid: true,\r\n      })\r\n\r\n      const user = {\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n          password_confirmation: this.state.password_confirmation\r\n      }\r\n      \r\n      console.log(user);\r\n\r\n      axios.post('http://localhost:5000/users/add', user)\r\n      .then(response => {\r\n          if (response.data.status === \"created\") {\r\n          this.props.handleSuccessfulAuth(response.data);\r\n          }\r\n          console.log(response.data)\r\n          window.location = 'Job-Application-Tracker/login';\r\n      })\r\n      .catch(error => {\r\n          console.log(\"registration error\", error);\r\n          this.setState({\r\n            isValid: false,\r\n          })\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        isValid: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-5\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"formGroupEmail\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"username\" onChange={this.onChangeUsername} required/>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.onChangePassword} required/>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formGroupPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control type=\"password\" placeholder=\"Confirm Password\" onChange={this.onChangePasswordConfirm} required/>\r\n          </Form.Group>\r\n          <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Create User\" className=\"btn btn-primary\" />\r\n          </div>\r\n          {this.state.isValid ? \r\n            null : ( \r\n              <Alert variant={'danger'}>\r\n                One of the following errors has occured:\r\n                <li>Username already in use</li>\r\n                <li>Password must be more than 3 characters</li>\r\n                <li>Password is invalid</li>\r\n                <li>Password Confirmation does not match</li>\r\n              </Alert>\r\n            )\r\n          }\r\n        </Form>\r\n      </div>\r\n      \r\n      // <div>\r\n      //   <form onSubmit={this.handleSubmit}>\r\n      //     <input\r\n      //       type=\"username\"\r\n      //       name=\"username\"\r\n      //       placeholder=\"username\"\r\n      //       value={this.state.username}\r\n      //       onChange={this.handleChange}\r\n      //       required\r\n      //     />\r\n\r\n      //     <input\r\n      //       type=\"password\"\r\n      //       name=\"password\"\r\n      //       placeholder=\"Password\"\r\n      //       value={this.state.password}\r\n      //       onChange={this.handleChange}\r\n      //       required\r\n      //     />\r\n\r\n      //     <input\r\n      //       type=\"password\"\r\n      //       name=\"password_confirmation\"\r\n      //       placeholder=\"Password confirmation\"\r\n      //       value={this.state.password_confirmation}\r\n      //       onChange={this.handleChange}\r\n      //       required\r\n      //     />\r\n\r\n      //     <button type=\"submit\">Register</button>\r\n      //   </form>\r\n      //   <div>\r\n      //     {this.state.isValid ? \r\n      //         null : ( \r\n      //           <Alert variant={'danger'}>\r\n      //             One of the following errors has occured:\r\n      //             <li>Username already in use</li>\r\n      //             <li>Password must be more than 3 characters</li>\r\n      //             <li>Password is invalid</li>\r\n      //             <li>Password Confirmation does not match</li>\r\n      //           </Alert>\r\n      //         )\r\n      //       }\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}","import React, { Component, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Alert, Form } from 'react-bootstrap';\r\nimport UserContext from '../../context/UserContext';\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [valid, setValid] = useState({isValid: true});\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.state = {\r\n  //     username: \"\",\r\n  //     password: \"\",\r\n  //     loginErrors: \"\",\r\n  //     isValid: true,\r\n\r\n  //   };\r\n\r\n  //   this.handleSubmit = this.handleSubmit.bind(this);\r\n  //   this.onChangeUsername = this.onChangeUsername.bind(this);\r\n  //   this.onChangePassword = this.onChangePassword.bind(this);\r\n  // }\r\n\r\n  // onChangeUsername(e) {\r\n  //   this.setState({ username: e.target.value })\r\n  // }\r\n  // onChangePassword(e) {\r\n  //     this.setState({ password: e.target.value })\r\n  // }\r\n\r\n  const { setUserData } = useContext(UserContext);\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const loginUser = { username, password };\r\n      const loginRes = await axios.post(\r\n        \"http://localhost:5000/users/login\",\r\n        loginUser\r\n      );\r\n      setUserData({\r\n        token: loginRes.data.token,\r\n        user: loginRes.data.user,\r\n      });\r\n      localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n      window.location = 'Job-Application-Tracker/'\r\n    } catch (err) {\r\n      setValid({\r\n        isValid: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  // handleSubmit(e) {\r\n  //   e.preventDefault();\r\n\r\n  //   const { setUserData } = useContext(UserContext);\r\n  //   const user = {\r\n  //       username: this.state.username,\r\n  //       password: this.state.password,\r\n  //   }\r\n  //   axios.post(\"http://localhost:5000/login\", user)\r\n  //     // .then(response => {\r\n  //     //   if (response.data.logged_in) {\r\n  //     //     this.props.handleSuccessfulAuth(response.data);\r\n  //     //   }\r\n  //     // })\r\n  //     .then(response => {\r\n  //       setUserData({\r\n  //         token: response.data.token,\r\n  //         user: response.data.user,\r\n  //       })\r\n  //       localStorage.setItem(\"auth-token\", response.data.token);\r\n  //       window.location = '/'; \r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(\"login error\", error);\r\n  //       this.setState({\r\n  //           isValid: false,\r\n  //       })\r\n  //     });\r\n  // }\r\n\r\n  \r\n  return (\r\n      <div className=\"mt-5\">\r\n          <Form className=\"form\" onSubmit={submit}>\r\n              <Form.Group controlId=\"formGroupEmail\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control type=\"text\" placeholder=\"username\" onChange={(e) => setUsername(e.target.value)} required/>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formGroupPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} required/>\r\n              </Form.Group>\r\n              <div className=\"form-group\">\r\n                  <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\r\n              </div>\r\n              {valid.isValid ? \r\n                  null : ( \r\n                  <Alert variant={'danger'}>\r\n                      One of the following errors has occured:\r\n                      <li>Invalid credentials</li>\r\n                      <li>Account not registered</li>\r\n                  </Alert>\r\n                  )\r\n              }\r\n          </Form>\r\n      </div>\r\n  );\r\n  \r\n}","import React, { Component } from 'react';\r\nimport Login from './auth/login';\r\nimport Register from './auth/register';\r\n\r\nexport default class LoginPage extends Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Login/>\r\n                <div>\r\n                    <a href=\"Job-Application-Tracker/register\"><input type=\"submit\" value=\"Register\" className=\"btn btn-primary\" /></a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './components/navbar';\nimport FrontPage from './components/overviewPage';\nimport AddPage from './components/addApplication';\nimport EditPage from './components/editApplication';\nimport Register from './components/auth/register';\nimport LoginPage from './components/loginPage';\nimport UserContext from './context/UserContext';\n\nexport default function App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  })\n\n  //runs when app starts up\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\")\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\"\n      }\n      const tokenRes = await axios.post(\"http://localhost:5000/users/tokenIsValid\", \n        null, \n        { headers: {\"x-auth-token\": token} }\n      );\n      if (tokenRes.data) {\n        const userRes = await axios.get(\"http://localhost:5000/users/\",\n          { headers: {\"x-auth-token\": token}, }\n        );\n        setUserData({\n          token,\n          user: userRes.data,\n        })\n      }\n    }\n    checkLoggedIn();\n  }, []);\n\n  return (\n    <Router>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <div className=\"container\">\n          <Navbar/>\n          <Route path=\"Job-Application-Tracker/\" exact component={FrontPage}/>\n          <Route path=\"Job-Application-Tracker/add\" component={AddPage}/> \n          <Route path=\"Job-Application-Tracker/edit/:id\" component={EditPage}/>\n          <Route path=\"Job-Application-Tracker/register\" component={Register}/>\n          <Route path=\"Job-Application-Tracker/login\" component={LoginPage}/>\n        </div>\n      </UserContext.Provider>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}